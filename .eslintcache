[{"/home/abdussamed/Krex/src/index.js":"1","/home/abdussamed/Krex/src/Login.js":"2","/home/abdussamed/Krex/src/Main.js":"3","/home/abdussamed/Krex/src/products/ProductTab.js":"4","/home/abdussamed/Krex/src/products/AddProduct.js":"5"},{"size":1194,"mtime":1613207558015,"results":"6","hashOfConfig":"7"},{"size":2385,"mtime":1613208232912,"results":"8","hashOfConfig":"7"},{"size":3495,"mtime":1613208270516,"results":"9","hashOfConfig":"7"},{"size":6242,"mtime":1613285283970,"results":"10","hashOfConfig":"7"},{"size":5614,"mtime":1613289056936,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"qjjc58",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abdussamed/Krex/src/index.js",[],["24","25"],"/home/abdussamed/Krex/src/Login.js",[],"/home/abdussamed/Krex/src/Main.js",[],"/home/abdussamed/Krex/src/products/ProductTab.js",["26","27","28","29"],"import { useState } from \"react\";\nimport { Box, Button, IconButton, InputAdornment, Menu,MenuItem, TextField } from \"@material-ui/core\";\nimport { ApiContext, DataGrid } from \"@material-ui/data-grid\";\nimport { Add, Beenhere, Description, MoreVert, PinDropSharp, Remove, Search } from \"@material-ui/icons\";\nlet {ipcRenderer} = window.require(\"electron\");\n\nexport default function ProductTab()\n{\n    let verticalCenter =  {marginTop:\"auto\",marginBottom:\"auto\"};\n    let [rows,setRows] = useState([{\n        id:6,\n        marka:\"Samsung\",\n        model:\"A2 Core\",\n        fiyat:\"1500\",\n        renk:\"Lacivert\",\n        kdv:\"14.5\",\n        stok:14\n    },{\n        id:7,\n        marka:\"Vodafone\",\n        model:\"Red MI 12\",\n        fiyat:\"4000\",\n        renk:\"Beyaz\",\n        kdv:\"8\",\n        stok:25\n    }]);\n\n    async function updateData()\n    {\n        let rows = await ipcRenderer.invoke(\"db\",{\n            action:\"list\",\n            class:\"product\"\n        });\n        setRows(rows);\n    }\n    async function handleProductAdd()\n    {\n        await ipcRenderer.invoke(\"modal\",\"addproduct\");\n        await updateData();\n    }\n\n    return <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\n        <Box display=\"flex\" marginBottom=\"20px\">\n            <Beenhere style={verticalCenter}/>\n            <h3 style={{marginLeft:\"10px\",...verticalCenter}}>Tüm Ürünler</h3>\n            <Box marginLeft=\"auto\" marginY=\"auto\">\n                Arama:\n            </Box>\n            <TextField\n                InputProps={{\n                    startAdornment:(\n                        <InputAdornment position=\"start\">\n                            <Search/>\n                        </InputAdornment>\n                    )\n                }}\n                style={{marginLeft:\"10px\",...verticalCenter}}\n            />\n            <Button\n                variant=\"contained\"\n                color=\"primary\" \n                style={{marginLeft:\"10px\",...verticalCenter}}\n                onClick={handleProductAdd}\n            >\n                <Add />\n                Ürün Ekle \n            </Button>\n        </Box>\n        <ProductGrid\n            row={rows}\n        />\n    </Box>\n}\nfunction ProductTabOptions(props)\n{\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n  \n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleEdit = e => {\n        handleClick();\n        props.onEditItem && props.onEditItem();\n    };\n    const handleDelete = e => {\n        handleClick();\n        props.onDeleteItem && props.onDeleteItem();\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    return <>\n    <IconButton\n        onClick={handleClick}\n      >\n        <MoreVert />\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleEdit}>\n            Düzenle\n        </MenuItem>\n        <MenuItem onClick={handleDelete}>\n            Sil\n        </MenuItem>\n      </Menu>\n    </>\n}\n\nfunction ProductGrid(props)\n{\n    let [selectedItem,setSelectedItems] = useState([]);\n    function p(k){\n        k = k.toString().split('.');\n        return k[0] + (k[1]?'.'+k[1].slice(0,2):'')\n    }\n    const handleSelected = e => {\n        setSelectedItems(e.rowIds);\n        props.onSelectionChanged && props.onSelectionChanged(e.rowIds);\n    };\n    const handleEdit = e => {\n        props.onEditItem && props.onEditItem(selectedItem);\n    };\n    const handleDelete = e => {\n        props.onDeleteItem && props.onDeleteItem(selectedItem);\n    };\n    return <>\n    <Box flex=\"1 1 auto\" display=\"flex\">\n        <DataGrid\n            checkboxSelection=\"true\"\n            showColumnRightBorder={true}\n            showCellRightBorder={true}\n            onSelectionChange={handleSelected}\n            columns={[\n                {\n                    field:\"id\",\n                    headerName:\"ID\",\n                    hide:true\n                },\n                {\n                    field:\"marka\",\n                    headerName:\"Marka\",\n                    flex:20\n                },\n                {\n                    field:\"model\",\n                    headerName:\"Model\",\n                    flex:20\n                },\n                {\n                    field:\"fiyat\",\n                    headerName:\"Fiyat\",\n                    flex:10,\n                    type:\"number\",\n                    renderCell:(e)=> e.value + \"TL\",\n                },\n                {\n                    field:\"renk\",\n                    headerName:\"Renk\",\n                    flex:20\n                },\n                {\n                    field:\"kdv\",\n                    headerName:\"K.D.V.\",\n                    flex:10,\n                    type:\"number\",\n                    renderCell:(e)=> e.value + \"% (\" + p(parseFloat(e.row.fiyat) * parseFloat(\"0.\"+e.value)) + \"TL)\",\n                },\n                {\n                    field:\"stok\",\n                    headerName:\"Stok Adedi\",\n                    flex:10,\n                    type:\"number\",\n                    renderCell:(e)=> e.value + \" Adet\",\n                },\n                {\n                    field:\"I\",\n                    headerName:\" \",\n                    renderCell:(e)=> <ProductTabOptions onEditItem={handleEdit} onDeleteItem={handleDelete} />,\n                    flex:5,\n                    sortable:false,\n                    filterable:false\n                }\n            ]}\n            rows={props.row}\n        />\n    </Box>\n    {selectedItem.length != 0 && <Box flex=\"0 0 auto\" display=\"flex\" marginTop=\"10px\">\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleDelete}>\n            <Remove />\n            Seçileni Sil\n        </Button>\n        {selectedItem.length == 1 && <Button variant=\"contained\" color=\"secondary\" style={{backgroundColor:\"#00dd00\",marginLeft:\"10px\"}} onClick={handleEdit}>\n            <Description />\n            Seçileni Düzenle\n        </Button>}\n        <Button variant=\"outlined\" style={{marginLeft:\"10px\"}} onClick={handleEdit}>\n            <Description />\n            Fatura Oluştur\n        </Button>\n    </Box>}\n    </>\n}","/home/abdussamed/Krex/src/products/AddProduct.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":10,"nodeType":"36","messageId":"37","endLine":3,"endColumn":20},{"ruleId":"34","severity":1,"message":"38","line":4,"column":48,"nodeType":"36","messageId":"37","endLine":4,"endColumn":60},{"ruleId":"39","severity":1,"message":"40","line":194,"column":26,"nodeType":"41","messageId":"42","endLine":194,"endColumn":28},{"ruleId":"39","severity":1,"message":"43","line":199,"column":30,"nodeType":"41","messageId":"42","endLine":199,"endColumn":32},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'ApiContext' is defined but never used.","Identifier","unusedVar","'PinDropSharp' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]