[{"/home/abdussamed/Krex/src/index.js":"1","/home/abdussamed/Krex/src/Login.js":"2","/home/abdussamed/Krex/src/Main.js":"3","/home/abdussamed/Krex/src/products/ProductTab.js":"4","/home/abdussamed/Krex/src/products/AddProduct.js":"5","/home/abdussamed/Krex/src/products/UpdateProduct.js":"6"},{"size":1362,"mtime":1613316035853,"results":"7","hashOfConfig":"8"},{"size":2385,"mtime":1613208232912,"results":"9","hashOfConfig":"8"},{"size":3495,"mtime":1613208270516,"results":"10","hashOfConfig":"8"},{"size":7596,"mtime":1613321480816,"results":"11","hashOfConfig":"8"},{"size":5625,"mtime":1613315382648,"results":"12","hashOfConfig":"8"},{"size":6140,"mtime":1613321137698,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"qjjc58",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/home/abdussamed/Krex/src/index.js",[],["28","29"],"/home/abdussamed/Krex/src/Login.js",[],"/home/abdussamed/Krex/src/Main.js",[],"/home/abdussamed/Krex/src/products/ProductTab.js",["30","31","32","33","34"],"/home/abdussamed/Krex/src/products/AddProduct.js",[],"/home/abdussamed/Krex/src/products/UpdateProduct.js",["35","36"],"import { useEffect, useState } from \"react\";\nimport {Box, Button, TextField} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nlet {ipcRenderer} = window.require(\"electron\");\n\nexport default function UpdateProduct(props)\n{\n    let [errorMessage,setErrorMessage] = useState(false);\n    let [successMessage,setSuccessMessage] = useState(false);\n    let [showSave,setShowSave] = useState(false);\n    let [product,setDetails] = useState({\n        isim:\"\",\n        marka:\"\",\n        model:\"\",\n        barkod:\"\",\n        satisfiyati:\"\",\n        alisfiyati:\"\",\n        kdv:\"\",\n        renk:\"\",\n        stok:\"\",\n        descript:\"\"\n    });\n    useEffect(function(){\n        ipcRenderer.invoke(\"db\",{\n            action:\"get\",\n            class:\"product\",\n            id:props.args[0]\n        }).then(_product => setDetails(_product))\n    },[props.args[0]]);\n    function handleChange(name,value){\n        let nproduct = {\n            ...product,\n            [name]:value\n        };\n        setDetails(nproduct)\n        setErrorMessage(false);\n        setSuccessMessage(false);\n        setShowSave(nproduct.isim && parseInt(nproduct.satisfiyati) > 0 && parseInt(nproduct.stok) > 0)\n    };\n    async function handleClick()\n    {\n        setErrorMessage(false);\n        setSuccessMessage(false);\n        if(\n            !product.isim||\n            !product.satisfiyati\n        ){\n            setErrorMessage(\"Ürün ismi ve fiyatı zorunlu alanlardır\");\n            return;\n        };\n        await ipcRenderer.invoke(\"db\",{\n            action:\"update\",\n            class:\"product\",\n            id:props.args[0],\n            data:product\n        });\n        setSuccessMessage(\"Bilgiler Başarıyla Güncellendi\");\n        setTimeout(function(){\n            ipcRenderer.send(\"reply\",true)\n        },500)\n    }\n\n    document.title = \"Ürün Güncelleme Formu\";\n    let styles = {\n        marginTop:\"auto\",\n        marginBottom:\"auto\"\n    };\n\n    return <>\n        <Box height=\"100%\" display=\"flex\">\n            <Box width=\"350px\" height=\"90vh\" margin=\"auto\" display=\"flex\" flexDirection=\"column\">\n                <Box style={styles} fontSize=\"h4.fontSize\" marginBottom=\"50px\" textAlign=\"center\">\n                    Ürün Bilgileri\n                </Box>\n                <Box style={styles} display=\"flex\" flexDirection=\"row\">\n                    <Box marginBottom=\"10px\" flex=\"1 1 auto\">\n                        <TextField value={product.isim} label=\"Ürün İsmi\" fullWidth ariant=\"outlined\" onChange={e=>handleChange(\"isim\",e.target.value)} autoFocus/>\n                    </Box>\n                </Box>\n                <Box style={styles} display=\"flex\" flexDirection=\"row\">\n                    <Box marginBottom=\"10px\" flex=\"1 1 auto\">\n                        <TextField value={product.marka} label=\"Ürün Markası\" fullWidth ariant=\"outlined\" onChange={e=>handleChange(\"marka\",e.target.value)}/>\n                    </Box>\n                    <Box marginBottom=\"10px\" marginLeft=\"10px\" flex=\"1 1 auto\">\n                        <TextField value={product.model} label=\"Ürün Modeli\" fullWidth ariant=\"outlined\" onChange={e=>handleChange(\"model\",e.target.value)}/>\n                    </Box>\n                </Box>\n                <Box style={styles} display=\"flex\" flexDirection=\"row\" marginBottom=\"10px\">\n                    <Box marginBottom=\"10px\" flex=\"1 1 auto\">\n                        <TextField value={product.alisfiyati} type=\"number\" label=\"Ürün Alış Fiyatı\" fullWidth ariant=\"outlined\" onChange={e=>handleChange(\"alisfiyati\",e.target.value)}/>\n                    </Box>\n                    <Box marginLeft=\"10px\" flex=\"1 1 auto\">\n                        <TextField value={product.satisfiyati} type=\"number\" label=\"Ürün Satış Fiyatı\" fullWidth ariant=\"outlined\" onChange={e=>handleChange(\"satisfiyati\",e.target.value)}/>\n                    </Box>\n                </Box>\n                <Box style={styles} display=\"flex\" flexDirection=\"row\" marginBottom=\"10px\">\n                    <Box marginBottom=\"10px\" flex=\"1 1 auto\">\n                        <TextField value={product.kdv} type=\"number\" label=\"Katkı Değer Vegisi (%)\" fullWidth ariant=\"outlined\" onChange={e=>handleChange(\"kdv\",e.target.value)}/>\n                    </Box>\n                    <Box marginLeft=\"10px\" flex=\"1 1 auto\">\n                        <TextField value={product.stok} type=\"number\" label=\"Stok Adedi\" fullWidth ariant=\"outlined\" onChange={e=>handleChange(\"stok\",e.target.value)}/>\n                    </Box>\n                </Box>\n                <Box style={styles} display=\"flex\" flexDirection=\"row\" marginBottom=\"10px\">\n                    <Box marginBottom=\"10px\" flex=\"1 1 auto\">\n                        <TextField value={product.barkod} label=\"Ürün Barkod\" fullWidth ariant=\"outlined\" onChange={e=>handleChange(\"barkod\",e.target.value)}/>\n                    </Box>\n                    <Box marginLeft=\"10px\" flex=\"1 1 auto\">\n                        <TextField value={product.renk} label=\"Ürün Rengi\" fullWidth ariant=\"outlined\" onChange={e=>handleChange(\"renk\",e.target.value)}/>\n                    </Box>\n                </Box>\n                <Box style={styles} display=\"flex\" flexDirection=\"row\" marginBottom=\"10px\">\n                    <Box marginBottom=\"10px\" flex=\"1 1 auto\">\n                        <TextField value={product.descript} multiline rows=\"3\" label=\"Açıklama\" fullWidth ariant=\"outlined\" onChange={e=>handleChange(\"descript\",e.target.value)}/>\n                    </Box>\n                </Box>\n                {!successMessage && showSave && <Box style={styles} textAlign=\"center\">\n                    <Button variant=\"outlined\" color=\"primary\" style={{marginTop:\"auto\"}} onClick={handleClick}>\n                        Güncelle\n                    </Button>\n                </Box>}\n                <Box style={styles} textAlign=\"center\">\n                    {errorMessage ? <Alert severity=\"warning\">{errorMessage}</Alert> : null}\n                    {successMessage ? <Alert severity=\"success\">{successMessage}</Alert> : null}\n                </Box>\n            </Box>\n        </Box>\n    </>\n}",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":20},{"ruleId":"41","severity":1,"message":"45","line":4,"column":48,"nodeType":"43","messageId":"44","endLine":4,"endColumn":60},{"ruleId":"46","severity":1,"message":"47","line":81,"column":37,"nodeType":"48","messageId":"49","endLine":81,"endColumn":39},{"ruleId":"46","severity":1,"message":"47","line":224,"column":26,"nodeType":"48","messageId":"49","endLine":224,"endColumn":28},{"ruleId":"46","severity":1,"message":"50","line":229,"column":30,"nodeType":"48","messageId":"49","endLine":229,"endColumn":32},{"ruleId":"51","severity":1,"message":"52","line":29,"column":7,"nodeType":"53","endLine":29,"endColumn":22,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":29,"column":8,"nodeType":"56","endLine":29,"endColumn":21},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'ApiContext' is defined but never used.","Identifier","unusedVar","'PinDropSharp' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.args'. Either include it or remove the dependency array.","ArrayExpression",["59"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [props.args]",{"range":"62","text":"63"},[848,863],"[props.args]"]